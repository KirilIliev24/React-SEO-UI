[{"C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\index.js":"1","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\App.js":"2","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\reportWebVitals.js":"3","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Contexts\\KeywordsContext.js":"4","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\AddKeyword.js":"5","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\SelectKeyword.js":"6","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Layout\\Header.js":"7","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Contexts\\LinksContext.js":"8","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\LinkList.js":"9","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\LinkComponent.js":"10","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Contexts\\LinkDetailsContext.js":"11","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\Pages\\LinkDetailsPage.js":"12","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\Graphs\\Position.js":"13","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\Graphs\\CssChart.js":"14","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\Graphs\\JsChart.js":"15","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\Graphs\\WordCountChart.js":"16","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\ExternalLinks.js":"17","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\MeaningfulText.js":"18"},{"size":922,"mtime":1610456909240,"results":"19","hashOfConfig":"20"},{"size":936,"mtime":1611309468332,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":772,"mtime":1610547193535,"results":"23","hashOfConfig":"20"},{"size":1456,"mtime":1611316101800,"results":"24","hashOfConfig":"20"},{"size":3463,"mtime":1611303822099,"results":"25","hashOfConfig":"20"},{"size":210,"mtime":1611304586347,"results":"26","hashOfConfig":"20"},{"size":1028,"mtime":1610546640235,"results":"27","hashOfConfig":"20"},{"size":936,"mtime":1610711778790,"results":"28","hashOfConfig":"20"},{"size":1406,"mtime":1610971645873,"results":"29","hashOfConfig":"20"},{"size":2966,"mtime":1611143554909,"results":"30","hashOfConfig":"20"},{"size":5667,"mtime":1611324823974,"results":"31","hashOfConfig":"20"},{"size":852,"mtime":1611325682006,"results":"32","hashOfConfig":"20"},{"size":755,"mtime":1611238696555,"results":"33","hashOfConfig":"20"},{"size":756,"mtime":1611238615328,"results":"34","hashOfConfig":"20"},{"size":728,"mtime":1611238613424,"results":"35","hashOfConfig":"20"},{"size":4145,"mtime":1611321947610,"results":"36","hashOfConfig":"20"},{"size":2851,"mtime":1611238338329,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"17jmsbe",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},"C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\index.js",[],["81","82"],"C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\App.js",[],"C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\reportWebVitals.js",[],"C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Contexts\\KeywordsContext.js",[],"C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\AddKeyword.js",[],"C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\SelectKeyword.js",["83","84","85","86"],"C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Layout\\Header.js",[],"C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Contexts\\LinksContext.js",[],"C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\LinkList.js",["87"],"import { useContext, useEffect, useState} from \"react\";\r\n\r\nimport { LinksContext } from \"../Contexts/LinksContext\";\r\nimport { LinkComponent } from \"./LinkComponent\";\r\n\r\nexport const LinkList = () =>{\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const {links} = useContext(LinksContext);\r\n\r\n    useEffect(() => {\r\n        if(links.lenght === 0)\r\n        {\r\n            setLoading(true);\r\n        }\r\n        else\r\n        {\r\n            setLoading(false)\r\n        }\r\n    }, [])\r\n\r\n    return(\r\n     \r\n        <div>\r\n            {loading ? \r\n             <div>\r\n              <p>Loading...</p>\r\n            </div>\r\n            : \r\n            <div className = \"container\">\r\n                 {links.map((link, i) => {\r\n                     return(\r\n                        <LinkComponent key = {i} link = {link}/>\r\n                    )   \r\n               })}\r\n            </div> \r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\LinkComponent.js",["88","89","90","91","92","93","94","95"],"\r\nimport { useContext } from \"react\";\r\nimport { LinkDetailsContext } from '../Contexts/LinkDetailsContext';\r\nimport { BrowserRouter as Router, Route, NavLink, Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../Css/LinkComponent.css\";\r\n\r\n\r\nexport const LinkComponent = (props) =>{\r\n\r\n    const {details, getLinksDetails} = useContext(LinkDetailsContext);\r\n    const {keyword, title, link, snippet} = props.link;\r\n\r\n    // const getLinksDetailsBtn = () =>{\r\n    //     getLinksDetails(link, keyword, \"\", \"\");\r\n    // }//move to link details and pass the link?\r\n    {/* <button onClick = {getLinksDetailsBtn.bind(this, link)}>Click me</button> */}\r\n\r\n    return(\r\n        <div>\r\n               <div className = \"row\" id = \"divItem\">\r\n                    <h4>{title}</h4>\r\n                    <a href = {`${link}`} target = \"_blank\">{link}</a> \r\n                    <p>{snippet}</p>\r\n                    <div className = \"navBtnDiv\">\r\n                        <NavLink\r\n                            className = \"navBtn\"\r\n                            to = {{\r\n                                pathname: \"/linkDetails\",\r\n                                dataPass: {link, keyword}\r\n                            }}>\r\n                                Go to link details\r\n                        </NavLink>\r\n                    </div>\r\n               </div>\r\n               \r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Contexts\\LinkDetailsContext.js",[],"C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\Pages\\LinkDetailsPage.js",["96","97","98","99","100","101"],"C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\Graphs\\Position.js",["102","103"],"C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\Graphs\\CssChart.js",["104","105"],"import {useEffect, useState} from \"react\"\r\nimport {Line} from \"react-chartjs-2\"\r\nimport \"../../Css/Charts.css\"\r\n\r\nexport const CssChart = (props) =>{\r\n\r\n    return(\r\n        <div id = \"chartDiv\">\r\n            <Line\r\n                data = {{\r\n                    labels: props.dates,\r\n                    datasets: [\r\n                        {\r\n                            label: \"Css %\",\r\n                            data: props.css,\r\n                            fill: false\r\n                        }\r\n                    ]\r\n                }}\r\n                height = {20}\r\n                width = {40}\r\n                options = {{\r\n                    maintainAspectRatio: true\r\n                }}\r\n            />\r\n        </div>\r\n        \r\n    )\r\n}","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\Graphs\\JsChart.js",["106","107"],"import {useEffect, useState} from \"react\"\r\nimport {Line} from \"react-chartjs-2\"\r\nimport \"../../Css/Charts.css\"\r\n\r\nexport const JsChart = (props) =>{\r\n\r\n    return(\r\n        <div id = \"chartDiv\">\r\n            <Line\r\n                data = {{\r\n                    labels: props.dates,\r\n                    datasets: [\r\n                        {\r\n                            label: \"Js %\",\r\n                            data: props.js,\r\n                            fill: false,    \r\n                        }\r\n                    ]\r\n                }}\r\n                height = {20}\r\n                width = {40}\r\n                options = {{\r\n                    maintainAspectRatio: true\r\n                }}\r\n            />\r\n        </div>\r\n       \r\n    )\r\n}","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\Graphs\\WordCountChart.js",["108","109"],"import {useEffect, useState} from \"react\"\r\nimport {Bar} from \"react-chartjs-2\"\r\nimport \"../../Css/Charts.css\"\r\n\r\nexport const WordCountChart = (props) =>{\r\n\r\n    return(\r\n        <div id = \"chartDiv\">\r\n             <Bar\r\n                data = {{\r\n                    labels: props.dates,\r\n                    datasets: [\r\n                        {\r\n                            label: \"Word count\",\r\n                            data: props.wordCount    \r\n                        }\r\n                    ]\r\n                }}\r\n                height = {20}\r\n                width = {40}\r\n                options = {{\r\n                    maintainAspectRatio: true\r\n                }}\r\n        />\r\n        </div>\r\n       \r\n    )\r\n}","C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\ExternalLinks.js",["110","111","112","113","114","115","116","117"],"C:\\Users\\kiliev\\source\\repos\\ReactTodoList\\React-SEO-UI\\seo-react-ui\\src\\Components\\MeaningfulText.js",["118","119","120","121","122"],"import { useContext, useState, useEffect} from \"react\";\r\nimport { LinkDetailsContext } from \"../Contexts/LinkDetailsContext\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"../Css/MeaningfulText.css\";\r\nimport {Zlib, Inflate} from \"react-zlib-js\";\r\n\r\n// import { zip, unzip, unzipAssets, subscribe } from 'react-native-zip-archive'\r\n\r\nexport const MeaningfulText = (props) =>{\r\n\r\n    const [date, setDate] = useState(new Date());\r\n    const [isloading, setIsLoading] = useState(true);\r\n\r\n    const {meaningfulText, getMeaningfulText} = useContext(LinkDetailsContext);\r\n\r\n    //this works only for 1 keyword count\r\n    const {text, keyword, keywordsInText, keywordsInMetaTags} = meaningfulText[0];\r\n    const [decodedText, setDecodedText] = useState(\"\");\r\n    useEffect(() => {\r\n        return () => {\r\n            setIsLoading(true);\r\n        }\r\n    }, [])\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        console.log(text)\r\n        decodeText(text);\r\n    }, [meaningfulText])\r\n\r\n    const decodeText = (encodedString) =>{\r\n        \r\n        try {\r\n            const pako = require('pako');\r\n\r\n            var strData = window.atob(encodedString);\r\n            console.log(\"Strig data\\n\" + strData);\r\n\r\n            const data = pako.inflateRaw(Uint8Array.from(strData, c => c.charCodeAt(0)), {to : 'string'});\r\n            setDecodedText(data);\r\n            console.log(data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const getText = async() =>{\r\n        setIsLoading(true);\r\n        await getMeaningfulText(props.link, date);\r\n        setIsLoading(false);\r\n    }\r\n\r\n    return(\r\n        <div className = \"container textContainer\">\r\n            <h3>Meaningful text</h3>\r\n            <div className = \"row\">\r\n                <div className = \"col\">\r\n                    <p className = \"textParagraph\">\r\n                        {decodedText}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className = \"row keywordCountRow\">\r\n                <div className = \"col-md-3 textOne\">Keywords in text: {keywordsInText}</div>\r\n                <div className = \"col-md-3 textTwo\">Keywords in meta tags: {keywordsInMetaTags}</div>\r\n            </div>\r\n            <div className = \"row dateTextRow\">\r\n                <div className = \"col-md-4 dateTextDiv\">\r\n                    <DatePicker \r\n                        className = \"meanTextDate\"\r\n                        selected = {date}\r\n                        dateFormat=\"P\"\r\n                        onChange = {date => setDate(date)}/>\r\n                </div>\r\n                <div className = \"col-md-4 btnTextDiv\">\r\n                   <button className = \"textBtn\" onClick = {getText}>Get Data</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}",{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":7,"column":8,"nodeType":"129","messageId":"130","endLine":7,"endColumn":13},{"ruleId":"127","severity":1,"message":"131","line":22,"column":12,"nodeType":"129","messageId":"130","endLine":22,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":25,"column":16,"nodeType":"134","endLine":28,"endColumn":6},{"ruleId":"132","severity":1,"message":"135","line":28,"column":8,"nodeType":"136","endLine":28,"endColumn":10,"suggestions":"137"},{"ruleId":"132","severity":1,"message":"138","line":20,"column":8,"nodeType":"136","endLine":20,"endColumn":10,"suggestions":"139"},{"ruleId":"127","severity":1,"message":"140","line":4,"column":27,"nodeType":"129","messageId":"130","endLine":4,"endColumn":33},{"ruleId":"127","severity":1,"message":"141","line":4,"column":35,"nodeType":"129","messageId":"130","endLine":4,"endColumn":40},{"ruleId":"127","severity":1,"message":"142","line":4,"column":51,"nodeType":"129","messageId":"130","endLine":4,"endColumn":55},{"ruleId":"127","severity":1,"message":"128","line":5,"column":8,"nodeType":"129","messageId":"130","endLine":5,"endColumn":13},{"ruleId":"127","severity":1,"message":"143","line":11,"column":12,"nodeType":"129","messageId":"130","endLine":11,"endColumn":19},{"ruleId":"127","severity":1,"message":"144","line":11,"column":21,"nodeType":"129","messageId":"130","endLine":11,"endColumn":36},{"ruleId":"145","severity":1,"message":"146","line":17,"column":5,"nodeType":"147","messageId":"148","endLine":17,"endColumn":86},{"ruleId":"149","severity":1,"message":"150","line":23,"column":21,"nodeType":"151","endLine":23,"endColumn":61},{"ruleId":"127","severity":1,"message":"152","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":16},{"ruleId":"127","severity":1,"message":"153","line":31,"column":13,"nodeType":"129","messageId":"130","endLine":31,"endColumn":27},{"ruleId":"154","severity":1,"message":"155","line":43,"column":42,"nodeType":"134","messageId":"156","endLine":43,"endColumn":44},{"ruleId":"132","severity":1,"message":"133","line":59,"column":15,"nodeType":"134","endLine":64,"endColumn":6},{"ruleId":"132","severity":1,"message":"157","line":64,"column":8,"nodeType":"136","endLine":64,"endColumn":10,"suggestions":"158"},{"ruleId":"132","severity":1,"message":"159","line":72,"column":8,"nodeType":"136","endLine":72,"endColumn":10,"suggestions":"160"},{"ruleId":"127","severity":1,"message":"161","line":1,"column":9,"nodeType":"129","messageId":"130","endLine":1,"endColumn":18},{"ruleId":"127","severity":1,"message":"162","line":1,"column":20,"nodeType":"129","messageId":"130","endLine":1,"endColumn":28},{"ruleId":"127","severity":1,"message":"161","line":1,"column":9,"nodeType":"129","messageId":"130","endLine":1,"endColumn":18},{"ruleId":"127","severity":1,"message":"162","line":1,"column":20,"nodeType":"129","messageId":"130","endLine":1,"endColumn":28},{"ruleId":"127","severity":1,"message":"161","line":1,"column":9,"nodeType":"129","messageId":"130","endLine":1,"endColumn":18},{"ruleId":"127","severity":1,"message":"162","line":1,"column":20,"nodeType":"129","messageId":"130","endLine":1,"endColumn":28},{"ruleId":"127","severity":1,"message":"161","line":1,"column":9,"nodeType":"129","messageId":"130","endLine":1,"endColumn":18},{"ruleId":"127","severity":1,"message":"162","line":1,"column":20,"nodeType":"129","messageId":"130","endLine":1,"endColumn":28},{"ruleId":"127","severity":1,"message":"163","line":15,"column":23,"nodeType":"129","messageId":"130","endLine":15,"endColumn":35},{"ruleId":"127","severity":1,"message":"164","line":20,"column":12,"nodeType":"129","messageId":"130","endLine":20,"endColumn":21},{"ruleId":"127","severity":1,"message":"153","line":22,"column":13,"nodeType":"129","messageId":"130","endLine":22,"endColumn":27},{"ruleId":"127","severity":1,"message":"165","line":22,"column":29,"nodeType":"129","messageId":"130","endLine":22,"endColumn":40},{"ruleId":"132","severity":1,"message":"166","line":33,"column":8,"nodeType":"136","endLine":33,"endColumn":10,"suggestions":"167"},{"ruleId":"154","severity":1,"message":"155","line":37,"column":26,"nodeType":"134","messageId":"156","endLine":37,"endColumn":28},{"ruleId":"127","severity":1,"message":"168","line":45,"column":13,"nodeType":"129","messageId":"130","endLine":45,"endColumn":17},{"ruleId":"132","severity":1,"message":"159","line":53,"column":8,"nodeType":"136","endLine":53,"endColumn":10,"suggestions":"169"},{"ruleId":"127","severity":1,"message":"170","line":6,"column":9,"nodeType":"129","messageId":"130","endLine":6,"endColumn":13},{"ruleId":"127","severity":1,"message":"171","line":6,"column":15,"nodeType":"129","messageId":"130","endLine":6,"endColumn":22},{"ruleId":"127","severity":1,"message":"172","line":13,"column":12,"nodeType":"129","messageId":"130","endLine":13,"endColumn":21},{"ruleId":"127","severity":1,"message":"173","line":18,"column":18,"nodeType":"129","messageId":"130","endLine":18,"endColumn":25},{"ruleId":"132","severity":1,"message":"174","line":31,"column":8,"nodeType":"136","endLine":31,"endColumn":24,"suggestions":"175"},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'links' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getAllKeywords'. Either include it or remove the dependency array.","ArrayExpression",["178"],"React Hook useEffect has a missing dependency: 'links.lenght'. Either include it or remove the dependency array.",["179"],"'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'details' is assigned a value but never used.","'getLinksDetails' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'_default' is defined but never used.","'containerProps' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'dataPass.dataPass.keyword', 'dataPass.dataPass.link', and 'getLinksDetails'. Either include them or remove the dependency array.",["180"],"React Hook useEffect has a missing dependency: 'resetData'. Either include it or remove the dependency array.",["181"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'setFirstLink' is assigned a value but never used.","'linksRows' is assigned a value but never used.","'indicatorEl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getLinksList'. Either include it or remove the dependency array.",["182"],"'rows' is assigned a value but never used.",["183"],"'Zlib' is defined but never used.","'Inflate' is defined but never used.","'isloading' is assigned a value but never used.","'keyword' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'text'. Either include it or remove the dependency array.",["184"],"no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"191","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [getAllKeywords]",{"range":"198","text":"199"},"Update the dependencies array to be: [links.lenght]",{"range":"200","text":"201"},"Update the dependencies array to be: [dataPass.dataPass.keyword, dataPass.dataPass.link, getLinksDetails]",{"range":"202","text":"203"},"Update the dependencies array to be: [resetData]",{"range":"204","text":"205"},"Update the dependencies array to be: [getLinksList]",{"range":"206","text":"207"},{"range":"208","text":"205"},"Update the dependencies array to be: [meaningfulText, text]",{"range":"209","text":"210"},[1063,1065],"[getAllKeywords]",[486,488],"[links.lenght]",[2449,2451],"[dataPass.dataPass.keyword, dataPass.dataPass.link, getLinksDetails]",[2627,2629],"[resetData]",[1208,1210],"[getLinksList]",[1704,1706],[1010,1026],"[meaningfulText, text]"]